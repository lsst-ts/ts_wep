description: wep direct detect pipeline

tasks:
  isr:
    class: lsst.ip.isr.IsrTaskLSST
  generateDonutDirectDetectTask:
    class: lsst.ts.wep.task.generateDonutDirectDetectTask.GenerateDonutDirectDetectTask
    config:
      donutSelector.useCustomMagLimit: True
      donutSelector.sourceLimit: 20
  cutOutDonutsScienceSensorGroupTask:
    class: lsst.ts.wep.task.cutOutDonutsScienceSensorTask.CutOutDonutsScienceSensorTask
    config:
      python: |
        from lsst.ts.wep.task.pairTask import GroupPairer
        config.pairer.retarget(GroupPairer)
      donutStampSize: 200
      initialCutoutPadding: 40
  calcZernikesTask:
    class: lsst.ts.wep.task.calcZernikesTask.CalcZernikesTask
    config:
      estimateZernikes.nollIndices: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 27, 28]
      estimateZernikes.convergeTol: 10.0e-9
      estimateZernikes.requireConverge: True
      estimateZernikes.compGain: 0.75
      estimateZernikes.compSequence: [4, 4, 6, 6, 13, 13, 13, 13]
      estimateZernikes.maxIter: 50
      estimateZernikes.saveHistory: False
      estimateZernikes.maskKwargs: { "doMaskBlends": False }
      donutStampSelector.maxSelect: 5

subsets:
  wepDirectDetect:
    subset:
      - isr
      - generateDonutDirectDetectTask
      - cutOutDonutsScienceSensorGroupTask
      - calcZernikesTask
    description: |
      This step processes the input images with ISR,
      finds and cuts out the donut stamps,
      and estimates the Zernike coefficients from the donut pairs.
