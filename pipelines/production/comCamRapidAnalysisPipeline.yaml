description: rapid analysis pipeline for ComCam
instrument: lsst.obs.lsst.LsstComCam
imports:
  - $TS_WEP_DIR/pipelines/_ingredients/wepDirectDetectScienceGroupPipeline.yaml
  - $TS_WEP_DIR/pipelines/_ingredients/donutVizGroupPipeline.yaml

tasks:
  calcZernikesTask:
    class: lsst.ts.wep.task.calcZernikesTask.CalcZernikesTask
    config:
      estimateZernikes.nollIndices: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 27, 28]
      estimateZernikes.convergeTol: 10.0e-9
      estimateZernikes.compGain: 0.75
      estimateZernikes.compSequence: [4, 4, 6, 6, 13, 13, 13, 13]
      estimateZernikes.maxIter: 50
      estimateZernikes.requireConverge: True
      estimateZernikes.saveHistory: False
      estimateZernikes.maskKwargs: { "doMaskBlends": False }
      donutStampSelector.maxSelect: 5
      donutStampSelector.maxFracBadPixels: 2.0e-4
  plotAOSTask:
    class: lsst.donut.viz.PlotAOSTask
    config:
      doRubinTVUpload: true
  plotDonutTask:
    class: lsst.donut.viz.PlotDonutTask
    config:
      doRubinTVUpload: true
  plotPsfZernTask:
    class: lsst.donut.viz.PlotPsfZernTask
    config:
      doRubinTVUpload: true

# Define pipeline steps
subsets:
  step1:
    subset:
      - isr
      - generateDonutDirectDetectTask
      - cutOutDonutsScienceSensorGroupTask
      - calcZernikesTask
    description: |
      This step processes the input images with ISR,
      finds and cuts out the donut stamps,
      and estimates the Zernike coefficients from the donut pairs.
  step2a:
    subset:
      - aggregateZernikeTablesTask
      - aggregateDonutTablesGroupTask
      - aggregateAOSVisitTableTask
      - plotAOSTask
      - aggregateDonutStampsTask
      - plotDonutTask
      - plotPsfZernTask
    description: |
      AOS Donut visualization plotting tasks. This step generates plots
      (including the pyramid residual and donut gallery) and
      tables for the AOS visit.
